name: Test with Allure Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: openagent
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.5'
        
    - name: Install poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client libpq-dev
        poetry install
        poetry add pytest pytest-xdist allure-pytest
        
    - name: Set up Allure
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Install Allure CommandLine
      run: |
        curl -o allure-2.24.1.tgz -OL https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.1/allure-commandline-2.24.1.tgz
        sudo tar -zxvf allure-2.24.1.tgz -C /opt/
        sudo ln -s /opt/allure-2.24.1/bin/allure /usr/bin/allure
        allure --version
        
    - name: Run tests
      continue-on-error: true
      env:
        # Database settings
        DB_CONNECTION: postgresql+psycopg://postgres:password@localhost:5432/openagent
        
        # LLM provider settings
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}

        # Optional API keys
        TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
        MORALIS_API_KEY: ${{ secrets.MORALIS_API_KEY }}
        ROOTDATA_API_KEY: ${{ secrets.ROOTDATA_API_KEY }}
        COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
        
        # RSS3 API URLs
        RSS3_DATA_API: https://gi.rss3.io
        RSS3_SEARCH_API: https://devnet.rss3.io/search
        

      run: |
        pwd
        ls -la
        
        mkdir -p allure-results
        
        cd tests
        poetry run pytest --count=3 -n 11 supervisor_chain.py --alluredir=../allure-results --model=gpt-4o-mini || true
        poetry run pytest --count=1 -n 11 agent_trajectory/*.py --alluredir=../allure-results --model=gpt-4o-mini || true
        cd ..
        
    - name: Generate Allure Report
      if: always()
      run: |
        allure generate allure-results --clean -o allure-report
        
    - name: Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: allure-report/
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' && always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report
